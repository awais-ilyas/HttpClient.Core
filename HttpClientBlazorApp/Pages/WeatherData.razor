@page "/weather"

@inject IHttpClientFactory _clientFactory

    <h3>WeatherData</h3>

    @if (!string.IsNullOrWhiteSpace(errorString))
    {
        <div class="h2">@errorString</div>
    }
    else if (forecast is null)
    {
        <div class="h4">Loading...</div>
    }
    else
    {
        <table class="table table-striped">
            <thead class="thead-dark">
                <tr>
                    <th>Date</th>
                    <th>Weather State</th>
                    <th>Low</th>
                    <th>High</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var w in forecast.Consolidated_weather)
                {
                    <tr>
                        <td>@w.Applicable_date</td>
                        <td>@w.Weather_state_name</td>
                        <td>@w.Min_temp</td>
                        <td>@w.Max_temp</td>
                    </tr>
                }
            </tbody>
        </table>
    }

    @code {
        WeatherForecastModel forecast;
        string errorString;

        protected override async Task OnInitializedAsync()
        {
            // Standard way of calling

            //var request = new HttpRequestMessage(HttpMethod.Get, "https://www.metaweather.com/api/location/2471217/");
            //var client = _clientFactory.CreateClient();

            //HttpResponseMessage response = await client.SendAsync(request);

            //if (response.IsSuccessStatusCode)
            //{
            //    forecast = await response.Content.ReadFromJsonAsync<WeatherForecastModel>();
            //    errorString = null;
            //}
            //else
            //{
            //    errorString = $"There was an error geting out forecast: {response.ReasonPhrase}";
            //}


            // Another way shortcut to call HttpClient

            var client = _clientFactory.CreateClient("meta");
            try
            {
                //forecast = await client.GetFromJsonAsync<WeatherForecastModel>("https://www.metaweather.com/api/location/2471217/");
                forecast = await client.GetFromJsonAsync<WeatherForecastModel>("location/2471217/");
                errorString = null;
            }
            catch (Exception ex)
            {
                errorString = $"There was an error geting out forecast: {ex.Message}";
            }

        }
    }
